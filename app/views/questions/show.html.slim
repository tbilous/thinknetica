- provide(:title, 'Question page')
span.chip.subscribe-block
  - if current_user && current_user.subscribed_to?(@question)
    span.unsubscribe
      = link_to 'unsubscribe', subscription_path(@question.subscriptions.ids), method: :delete, remote: true
  - else
    - if can? :create, Subscription
      span.subscribe
        = link_to 'subscribe', question_subscriptions_path(@question),method: :post, remote: true
.card id='QuestionPage'
  .question-block.collection-item data-question="#{@question.id}" id= "question-#{@question.id}"
    .row
      .col.s10
        .question-rendered.card-content
          = render 'questions/question_l_line'
        ul
          = render 'attachments/attachments', target: @question
      .col.s2.center
        .card-content
          = render 'shared/vote_container', object: @question, part: 'question'
    ul.list-inline.question-control-block.card-action
      - if can? :modify, @question
        li
          = link_to @question, class: 'btn-floating red', method: :delete, id: "delete-question-#{@question.id}"
            i.material-icons delete
        li
          button.script-item-toggle.btn-floating.green data-target='#question_form-edit-wrapper' id= ("edit-question-#{@question.id}")
            i.material-icons mode_edit
      - if can? :create, Comment
        li
          button.script-item-toggle.btn-floating.teal data-target="#question-comment-wrapper-#{@question.id}" id= ("comment-question-#{@question.id}")
            i.material-icons comment
.question-edit-wrapper.hidden id=('question_form-edit-wrapper')
  = render 'questions/form', remoted: true

.collection.comment-wrapper.hidden id=("question-comment-wrapper-#{@question.id}")
  .collection-item
    = render 'comments/form',
            comment: @question.comments.new,
            object: @question,
            name: 'Question',
            target: "#QuestionCommentsList-#{@question.id}"

.collection id = ("QuestionCommentsList-#{@question.id}")
  - if @question.comments.present?
    = render @question.comments

- if !@question.answers.present?
  p No answers
#answersList.collection
  - if @question.answers.present?
    = render @question.answers
- if can? :create, Answer
  .answer-wrapper
    h4 Write answer
    = render 'answers/form', answer: @question.answers.new
